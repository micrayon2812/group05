{"ast":null,"code":"var _jsxFileName = \"D:\\\\sem1_year3\\\\Software Engineer\\\\Project\\\\group05\\\\src\\\\src\\\\Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { Link, useHistory } from \"react-router-dom\";\nimport { BsFacebook, BsTwitter, BsLinkedin } from \"react-icons/bs\";\nimport { useAuth } from \"./contexts/AuthContext\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Signup() {\n  _s();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const {\n    signup,\n    currentUser\n  } = useAuth();\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      setError('');\n      setLoading(true);\n      return setError('Password does not match');\n    }\n\n    try {\n      await signup(emailRef.current.value, passwordRef.current.value);\n      history.push(\"/\");\n    } catch {\n      setError('Failed to create an account');\n    }\n\n    setLoading(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center mb-4\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              ref: emailRef,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              ref: passwordRef,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"password-confirm\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password Confirmation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              ref: passwordConfirmRef,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disable: loading,\n            className: \"w-100\",\n            type: \"submit\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100 text-center mt-2\",\n      children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Signup, \"MmLLarM5qnhIe/kopNRYQBU1UQI=\", false, function () {\n  return [useAuth, useHistory];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["D:/sem1_year3/Software Engineer/Project/group05/src/src/Signup.js"],"names":["React","useRef","useState","Link","useHistory","BsFacebook","BsTwitter","BsLinkedin","useAuth","Form","Button","Card","Alert","Signup","emailRef","passwordRef","passwordConfirmRef","signup","currentUser","error","setError","loading","setLoading","history","handleSubmit","e","preventDefault","current","value","push"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from 'react'\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport {BsFacebook, BsTwitter, BsLinkedin} from \"react-icons/bs\";\r\nimport {useAuth} from \"./contexts/AuthContext\";\r\nimport {Form, Button, Card, Alert} from \"react-bootstrap\"\r\n\r\nfunction Signup() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const {signup, currentUser} = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            setError('')\r\n            setLoading(true)\r\n            return setError('Password does not match')\r\n        }\r\n\r\n        try {\r\n            await signup(emailRef.current.value, passwordRef.current.value)\r\n            history.push(\"/\")\r\n        } catch {\r\n            setError('Failed to create an account')\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Card>\r\n            <Card.Body>\r\n                <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group id=\"email\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" ref={emailRef} required />\r\n                    </Form.Group>\r\n                    <Form.Group id=\"password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" ref={passwordRef} required />\r\n                    </Form.Group>\r\n                    <Form.Group id=\"password-confirm\">\r\n                        <Form.Label>Password Confirmation</Form.Label>\r\n                        <Form.Control type=\"password\" ref={passwordConfirmRef} required />\r\n                    </Form.Group>\r\n                    <Button disable={loading} className=\"w-100\" type=\"submit\">Sign Up</Button>\r\n                </Form>\r\n            </Card.Body>\r\n        </Card>\r\n        <div className=\"w-100 text-center mt-2\">\r\n            Already have an account? <Link to=\"/login\">Login</Link> \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Signup"]},"metadata":{},"sourceType":"module"}